@model VitaCore.Models.PatientModel

@{
    ViewData["Title"] = "Patient Details";
}

<h2 class="text-center">Patient Details</h2>

<div class="row">
    <!-- Col Stânga: Date generale -->
    <div class="col-md-6">
        <div class="card p-4 shadow rounded">
            <h4>Basic Information</h4>
            <dl class="row">
                <dt class="col-sm-4">Age</dt>
                <dd class="col-sm-8">@Model.age</dd>
                <dt class="col-sm-4">CNP</dt>
                <dd class="col-sm-8">@Model.cnp</dd>
                <dt class="col-sm-4">Email</dt>
                <dd class="col-sm-8">@Model.email</dd>
                <dt class="col-sm-4">Phone</dt>
                <dd class="col-sm-8">@Model.phone_number</dd>
                <dt class="col-sm-4">Occupation</dt>
                <dd class="col-sm-8">@Model.occupation</dd>
                <dt class="col-sm-4">Workplace</dt>
                <dd class="col-sm-8">@Model.workplace</dd>
                <dt class="col-sm-4">Street</dt>
                <dd class="col-sm-8">@Model.address_street</dd>
                <dt class="col-sm-4">City</dt>
                <dd class="col-sm-8">@Model.address_city</dd>
                <dt class="col-sm-4">County</dt>
                <dd class="col-sm-8">@Model.address_county</dd>
            </dl>

            <div class="mt-3">
                <a class="btn btn-outline-primary" asp-controller="MedicalHistory" asp-action="Edit" asp-route-patientId="@Model.id">Edit Medical History</a>
                <a class="btn btn-outline-primary" asp-controller="PhysicalActivities" asp-action="Create" asp-route-patientId="@Model.id">Add Activity</a>
                <a class="btn btn-outline-primary" asp-controller="Recommendations" asp-action="Create" asp-route-patientId="@Model.id">Add Recommendation</a>
            </div>
        </div>
    </div>

    <!-- Col Dreapta: Istoric & date medicale -->
    <div class="col-md-6">
        <div class="card p-4 shadow rounded">
            @if (Model.MedicalHistories?.Any() == true)
            {
                <h4>Last Medical History</h4>
                @foreach (var h in Model.MedicalHistories.OrderByDescending(m => m.CreatedAt))
                {
                    <div class="mb-3">
                        <p><strong>History:</strong> @h.History</p>
                        <p><strong>Cardiology:</strong> @h.CardiologyConsultations</p>
                        <p><strong>Allergies:</strong> @h.Allergies</p>
                        <p class="text-muted"><em>@h.CreatedAt.ToString("dd MMM yyyy, HH:mm")</em></p>
                        <hr />
                    </div>
                }
            }
            else
            {
                <p>No medical history available.</p>
            }

            @if (Model.Recommendations?.Any() == true)
            {
                <h4>Recommendations</h4>
                @foreach (var rec in Model.Recommendations.OrderByDescending(r => r.Id))
                {
                    <div class="mb-3">
                        <p><strong>Type:</strong> @rec.RecommendationType</p>
                        <p><strong>Daily Duration:</strong> @rec.DailyDuration</p>
                        <p><strong>Instructions:</strong> @rec.AdditionalInstructions</p>
                        <hr />
                    </div>
                }
            }
            else
            {
                <p>No recommendations available.</p>
            }

            @if (Model.PhysicalActivities?.Any() == true)
            {
                <h4>Physical Activities</h4>
                @foreach (var phy in Model.PhysicalActivities.OrderByDescending(p => p.StartTime))
                {
                    <div class="mb-3">
                        <p><strong>Activity:</strong> @phy.ActivityType</p>
                        <p><strong>Duration:</strong> @phy.Duration mins</p>
                        <p><strong>From:</strong> @phy.StartTime?.ToString("dd MMM yyyy HH:mm")</p>
                        <p><strong>To:</strong> @phy.EndTime?.ToString("dd MMM yyyy HH:mm")</p>
                        <hr />
                    </div>
                }
            }
            else
            {
                <p>No physical activities available.</p>
            }

            @if (Model.EcgSignals?.Any() == true)
            {
                var first = Model.EcgSignals.OrderByDescending(e => e.Timestamp).FirstOrDefault();
                if (first != null)
                {
                    // Extragem toate valorile BPM din string
                    var bpmValues = first.Signal
                        .Split('|', StringSplitOptions.RemoveEmptyEntries)
                        .Select(segment =>
                        {
                            var bpmPart = segment.Split(';').FirstOrDefault(p => p.StartsWith("BPM="));
                            return int.TryParse(bpmPart?.Replace("BPM=", ""), out int bpm) ? bpm : (int?)null;
                        })
                        .Where(bpm => bpm.HasValue)
                        .Select(bpm => bpm.Value)
                        .ToList();

                    var averageBpm = bpmValues.Any() ? bpmValues.Average() : 0;

                    <h4>Last ECG Preview</h4>
                    <p><strong>Timestamp:</strong> @first.Timestamp.ToString("g")</p>
                    <p><strong>Average BPM:</strong> @Math.Round(averageBpm)</p>

                    <a class="btn btn-sm btn-outline-primary"
                       asp-controller="EcgSignal"
                       asp-action="History"
                       asp-route-patientId="@Model.id">
                        View Full ECG History
                    </a>
                }
            }
            else
            {
                <p>No ECG readings available.</p>
            }


            <div class="mt-4">
                <a asp-action="Index" asp-controller="Doctors" class="btn btn-secondary">Back to List</a>
            </div>
        </div>
    </div>
</div>


